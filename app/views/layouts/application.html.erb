<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <!-- <meta name="apple-mobile-web-app-capable" content="yes" /> -->
    <!-- <meta name="viewport" content="width=device-width, initial-scale=1.0" /> -->
    <meta name="format-detection" content="telephone=no">

    <title><%= content_for?(:title) ? yield(:title) : "Randy Rollog Lee//Web Developer & Designer" %></title>

	  <%= stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true %>
    <%= javascript_include_tag "//ajax.googleapis.com/ajax/libs/angularjs/1.2.4/angular.min.js" %>
    <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
	  <%= favicon_link_tag "r_logo_fav.svg" %>
	  <%= csrf_meta_tags %>
  </head>

  <body ng-app="plangular" id="skrollr-body">

    <%= yield %>

    <script type="text/javascript">
      var s = skrollr.init({
        forceHeight: false
      });

      //The options (second parameter) are all optional. The values shown are the default values.
      skrollr.menu.init(s, {
          //skrollr will smoothly animate to the new position using `animateTo`.
          animate: true,

          //The easing function to use.
          easing: 'sqrt',

          //Multiply your data-[offset] values so they match those set in skrollr.init
          scale: 2,

          //How long the animation should take in ms.
          duration: function(currentTop, targetTop) {
              //By default, the duration is hardcoded at 500ms.
              return 300;

              //But you could calculate a value based on the current scroll position (`currentTop`) and the target scroll position (`targetTop`).
              //return Math.abs(currentTop - targetTop) * 10;
          },

          //If you pass a handleLink function you'll disable `data-menu-top` and `data-menu-offset`.
          //You are in control where skrollr will scroll to. You get the clicked link as a parameter and are expected to return a number.
          // handleLink: function(link) {
          //     return 400;//Hardcoding 400 doesn't make much sense.
          // }
      });

    </script>
  </body>
</html>